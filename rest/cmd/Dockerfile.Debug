#build from alpine container with golang
FROM golang:alpine AS build

#set the working directory to cmd, so we can build easily
WORKDIR /src/hello-http-rest/cmd

#set environment
ENV GO111MODULE auto

#copy current directory into the gopath
COPY . /src/hello-http-rest/cmd

#install delve and build the hell-http app
RUN apk add --no-cache ca-certificates \
    dpkg \
    gcc \
    git \
    musl-dev \
    && mkdir -p "$GOPATH/src" "$GOPATH/bin" \
    && mkdir -p /app/ \
    && go get github.com/go-delve/delve/cmd/dlv \
    && go build -gcflags "all=-N -l"  -o /app/hello-world-rest\
    && chmod +x /app/hello-http 

#build from a clean container (without golang)
FROM alpine:latest

#set working directory to app
WORKDIR /app

#copy delve and the app
COPY --from=build /app/hello-http /app/hello-http
COPY --from=build /go/bin/dlv /bin/

#use this to run delve with the executable
CMD dlv exec /app/hello-http --headless --listen=":2345" --log --api-version=2 --check-go-version=false

#use this to wait without doing anything if you want to interact with the container interactively
# docker exec -it hello-http /bin/ash
# CMD tail -f /dev/null